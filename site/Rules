#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

require 'compass'

Compass.add_project_configuration 'compass/config.rb'

compile '/readme/*' do
  filter :kramdown
  layout 'default'
end

compile '/stylesheets/*/' do
  filter :sass, Compass.sass_engine_options
end

compile '/stylesheets/partials/*/' do
  # don’t compile partials
end

compile '/stylesheets/.sass-cache*' do
  # nothing
end

compile '/javascripts/*/' do
  # don’t compile javascripts
end


compile '/css/*/' do
  # don’t compile partials
end

compile '/js/*/' do
  # don’t compile javascripts
end

compile '*' do
  if item.binary?
    # don’t filter binary items
  else
    filter :erb
    layout 'default'
  end
end

route '/stylesheets/_*/' do
  # don't output partials, so return nil
  nil
end

route '/stylesheets/*/' do
  # don't generate a directory like we do for HTML files
  item.identifier.chop + '.css'
end

route '/javascripts/*/' do
  # don't generate a directory like we do for HTML files
  item.identifier.chop + '.js'
end

route '/css/*/' do
  # don't generate a directory like we do for HTML files
  item.identifier.chop + '.css'
end

route '/js/*/' do
  # don't generate a directory like we do for HTML files
  item.identifier.chop + '.js'
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :erb
